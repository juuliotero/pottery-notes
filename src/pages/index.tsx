import { SignInButton, useUser } from "@clerk/nextjs";
import Head from "next/head";

import { RouterOutputs, api } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Image from "next/image";
import { LoadingPage } from "~/components/loading";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();
  if (!user) return null;

  return (
    <div className="flex w-full gap-4">
      <Image
        src={user.imageUrl}
        alt="Profile Image"
        width={64}
        height={64}
        className="rounded-full"
      />
      <input
        placeholder="type some emojis"
        className="grow bg-transparent p-4 outline-none"
      ></input>
    </div>
  );
};

type PostWithUser = RouterOutputs["post"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div className="flex gap-3 border-b border-slate-800 p-4" key={post.id}>
      <Image
        alt="Post author profile image"
        src={author.imageUrl}
        className="rounded-full"
        key={author.id}
        width={56}
        height={56}
      />
      <div className="flex flex-col">
        <div className="text flex gap-1 text-slate-300">
          <span>{`@${author.username} `}</span>
          <span className="font-thin">{`- ${dayjs(
            post.createdAt,
          ).fromNow()}`}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading: postLoading } = api.post.getAll.useQuery();
  if (postLoading) return <LoadingPage />;
  if (!data) return <div>Something went wrong</div>;

  return (
    <div>
      {data?.map(({ post, author }) => (
        <PostView post={post} author={author} key={post.id} />
      ))}
    </div>
  );
};

export default function Home() {
  const { isLoaded: userLoaded, isSignedIn } = useUser();
  api.post.getAll.useQuery();
  if (!userLoaded) return <div />;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="w-full border-x md:max-w-2xl">
          <div className="border-b border-slate-800 p-4">
            {!isSignedIn && (
              <div className="flex justify-center">
                <SignInButton></SignInButton>
              </div>
            )}
            {!!isSignedIn && <CreatePostWizard></CreatePostWizard>}
          </div>
          <Feed />
        </div>
      </main>
    </>
  );
}
